{"ast":null,"code":"import _classCallCheck from \"/Users/patrickgerspach/Desktop/mywebsite/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickgerspach/Desktop/mywebsite/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickgerspach/Desktop/mywebsite/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickgerspach/Desktop/mywebsite/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickgerspach/Desktop/mywebsite/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickgerspach/Desktop/mywebsite/client/src/components/IconRow.js\";\nimport React, { Component } from \"react\";\nimport CircleImage from \"./CircleImage\";\n\nvar IconRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IconRow, _Component);\n\n  function IconRow() {\n    _classCallCheck(this, IconRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IconRow).apply(this, arguments));\n  }\n\n  _createClass(IconRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var icons = [];\n      var i = 0;\n\n      while (i < this.props.icons.length / this.props.numRows) {\n        icons.push(this.props.icons.slice(this.props.icons.length / this.props.numRows * i, this.props.icons.length / this.props.numRows * (i + 1)));\n        i++;\n      }\n\n      console.log(icons);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, icons.map(function (iconset) {\n        React.createElement(\"div\", {\n          className: \"skill-icons flex-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, iconset.map(function (icon) {\n          return React.createElement(CircleImage, {\n            imageId: icon,\n            imageSource: \"./images/\".concat(icon, \".png\"),\n            size: \"\".concat(_this.props.size, \"px\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          });\n        }));\n      }));\n    }\n  }]);\n\n  return IconRow;\n}(Component);\n\nexport default IconRow;","map":{"version":3,"sources":["/Users/patrickgerspach/Desktop/mywebsite/client/src/components/IconRow.js"],"names":["React","Component","CircleImage","IconRow","icons","i","props","length","numRows","push","slice","console","log","map","iconset","icon","size"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,O;;;;;;;;;;;;;6BACK;AAAA;;AACP,UAAMC,KAAK,GAAG,EAAd;AACA,UAAIC,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAG,KAAKC,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,GAA0B,KAAKD,KAAL,CAAWE,OAAhD,EAAyD;AACvDJ,QAAAA,KAAK,CAACK,IAAN,CACE,KAAKH,KAAL,CAAWF,KAAX,CAAiBM,KAAjB,CACG,KAAKJ,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,GAA0B,KAAKD,KAAL,CAAWE,OAAtC,GAAiDH,CADnD,EAEG,KAAKC,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,GAA0B,KAAKD,KAAL,CAAWE,OAAtC,IAAkDH,CAAC,GAAG,CAAtD,CAFF,CADF;AAMAA,QAAAA,CAAC;AACF;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACS,GAAN,CAAU,UAAAC,OAAO,EAAI;AACpB;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,OAAO,CAACD,GAAR,CAAY,UAAAE,IAAI;AAAA,iBACf,oBAAC,WAAD;AACE,YAAA,OAAO,EAAEA,IADX;AAEE,YAAA,WAAW,qBAAcA,IAAd,SAFb;AAGE,YAAA,IAAI,YAAK,KAAI,CAACT,KAAL,CAAWU,IAAhB,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADe;AAAA,SAAhB,CADH;AASD,OAVA,CADH,CADF;AAeD;;;;EA7BmBf,S;;AA+BtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport CircleImage from \"./CircleImage\";\n\nclass IconRow extends Component {\n  render() {\n    const icons = [];\n    let i = 0;\n    while (i < this.props.icons.length / this.props.numRows) {\n      icons.push(\n        this.props.icons.slice(\n          (this.props.icons.length / this.props.numRows) * i,\n          (this.props.icons.length / this.props.numRows) * (i + 1)\n        )\n      );\n      i++;\n    }\n    console.log(icons);\n    return (\n      <div>\n        {icons.map(iconset => {\n          <div className=\"skill-icons flex-row\">\n            {iconset.map(icon => (\n              <CircleImage\n                imageId={icon}\n                imageSource={`./images/${icon}.png`}\n                size={`${this.props.size}px`}\n              />\n            ))}\n          </div>;\n        })}\n      </div>\n    );\n  }\n}\nexport default IconRow;\n"]},"metadata":{},"sourceType":"module"}